/*
 * Swagger Blog
 *
 * Simple Blog
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"os"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	f, err := os.Open("go/index.html")
	if err != nil {
		log.Fatal(err)
	}
	index, _ := ioutil.ReadAll(f)
	fmt.Fprintf(w, string(index))
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"ArticleIdCommentsGet",
		strings.ToUpper("Get"),
		"/article/{id}/comments",
		ArticleIdCommentsGet,
	},

	Route{
		"ArticleIdGet",
		strings.ToUpper("Get"),
		"/article/{id}",
		ArticleIdGet,
	},

	Route{
		"ArticlesGet",
		strings.ToUpper("Get"),
		"/articles",
		ArticlesGet,
	},

	Route{
		"ArticleIdCommentPost",
		strings.ToUpper("Post"),
		"/article/{id}/comment",
		ArticleIdCommentPost,
	},

	Route{
		"Options",
		strings.ToUpper("options"),
		"/article/{id}/comment",
		Options,
	},

	Route{
		"UserLoginPost",
		strings.ToUpper("Post"),
		"/user/login",
		UserLoginPost,
	},

	Route{
		"UserRegisterPost",
		strings.ToUpper("Post"),
		"/user/register",
		UserRegisterPost,
	},
}

